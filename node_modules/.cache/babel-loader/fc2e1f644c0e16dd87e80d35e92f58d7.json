{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\src\\\\routes\\\\filmsInfo\\\\Comments.jsx\";\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../filmsInfo/FilmsInfo.css\";\nimport saveComm from \"../../features/firebaseFunctions\";\nimport db from \"../../features/firebaseConfig\";\n\nvar Comments = function Comments(_ref) {\n  var film = _ref.film;\n  var content = [];\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      comm = _useState2[0],\n      setComm = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var commentlist = [];\n\n  var saveComment = function saveComment() {\n    try {\n      var data = {\n        name: name,\n        comment: comm,\n        filmId: film.id\n      };\n      console.log(\"data\", data);\n      saveComm(data);\n      cleardata();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  var cleardata = function cleardata() {\n    setComm(\" \");\n    setName(\" \");\n  };\n\n  useEffect(function () {\n    fetchComments(film);\n  });\n\n  var fetchComments = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(film) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              db.collection(\"comments\").onSnapshot(function (querySnapshot) {\n                var filmcoms = [];\n                querySnapshot.forEach(function (doc) {\n                  filmcoms.push(doc.data());\n                });\n                console.log(\"List of comments \", filmcoms);\n                content = filmcoms && filmcoms.map(function (item, index) {\n                  return /*#__PURE__*/React.createElement(\"div\", {\n                    className: \"movie-list\",\n                    key: index,\n                    __self: _this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 13\n                    }\n                  }, /*#__PURE__*/React.createElement(\"div\", {\n                    className: \"movie-title\",\n                    __self: _this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 15\n                    }\n                  }, /*#__PURE__*/React.createElement(\"p\", {\n                    __self: _this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 17\n                    }\n                  }, item.comment)));\n                });\n                return content;\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchComments(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"comment\", {\n    className: \"movie-comentars\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \" Comments\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputC\",\n    type: \"text\",\n    required: true,\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    placeholder: \"Write your comment here\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputC\",\n    type: \"text\",\n    required: true,\n    value: comm,\n    onChange: function onChange(e) {\n      return setComm(e.target.value);\n    },\n    placeholder: \"Write your comment here\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: saveComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \" Leave a comment\"))))));\n};\n\nexport default Comments;","map":{"version":3,"sources":["C:/Users/raibr/Documents/Meus Projetos/Movie-Bazzar/src/routes/filmsInfo/Comments.jsx"],"names":["React","useState","useEffect","saveComm","db","Comments","film","content","comm","setComm","name","setName","commentlist","saveComment","data","comment","filmId","id","console","log","cleardata","error","fetchComments","collection","onSnapshot","querySnapshot","filmcoms","forEach","doc","push","map","item","index","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"../filmsInfo/FilmsInfo.css\";\r\n\r\nimport saveComm from \"../../features/firebaseFunctions\";\r\n\r\nimport db from \"../../features/firebaseConfig\";\r\n\r\nconst Comments = ({ film }) => {\r\n  let content = [];\r\n\r\n  const [comm, setComm] = useState(\"\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n\r\n  let commentlist = [];\r\n\r\n  const saveComment = () => {\r\n    try {\r\n      const data = {\r\n        name: name,\r\n\r\n        comment: comm,\r\n\r\n        filmId: film.id,\r\n      };\r\n\r\n      console.log(\"data\", data);\r\n\r\n      saveComm(data);\r\n\r\n      cleardata();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const cleardata = () => {\r\n    setComm(\" \");\r\n\r\n    setName(\" \");\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComments(film);\r\n  });\r\n\r\n  const fetchComments = async (film) => {\r\n    db.collection(\"comments\")\r\n    .onSnapshot((querySnapshot) => {\r\n      var filmcoms = [];\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        filmcoms.push(doc.data());\r\n      });\r\n\r\n      console.log(\"List of comments \", filmcoms);\r\n\r\n      content =\r\n        filmcoms &&\r\n        filmcoms.map((item, index) => {\r\n          return (\r\n            <div className=\"movie-list\" key={index}>\r\n              <div className=\"movie-title\">\r\n                <p>{item.comment}</p>\r\n              </div>\r\n            </div>\r\n          );\r\n        });\r\n\r\n      return content;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <comment className=\"movie-comentars\">\r\n        <div className=\"\">\r\n          <div className=\"\">\r\n            <h2> Comments</h2>\r\n            \r\n\r\n            <div className=\"test\">{content}</div>\r\n\r\n            <div className=\"inputs\">\r\n              <input\r\n                className=\"inputC\"\r\n                type=\"text\"\r\n                required\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"Write your comment here\"\r\n              ></input>\r\n\r\n              <input\r\n                className=\"inputC\"\r\n                type=\"text\"\r\n                required\r\n                value={comm}\r\n                onChange={(e) => setComm(e.target.value)}\r\n                placeholder=\"Write your comment here\"\r\n              ></input>\r\n\r\n              <button onClick={saveComment}> Leave a comment</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </comment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}