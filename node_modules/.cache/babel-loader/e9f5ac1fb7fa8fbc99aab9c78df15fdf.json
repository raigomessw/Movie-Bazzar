{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\src\\\\routes\\\\filmsInfo\\\\Comments.jsx\";\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../filmsInfo/FilmsInfo.css\";\nimport { saveComm } from \"../../features/firebaseFunctions\";\nimport db from \"../../features/firebaseConfig\";\nimport firebase from 'firebase/app';\n\nvar Comments = function Comments(_ref) {\n  var film = _ref.film;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      commentlist = _useState2[0],\n      setCommentlist = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      comm = _useState4[0],\n      setComm = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var saveComment = function saveComment() {\n    try {\n      var data = {\n        name: name,\n        comment: comm,\n        filmId: film.id\n      };\n      console.log(\"data\", data);\n      saveComm(data);\n      cleardata();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  var cleardata = function cleardata() {\n    setComm(\" \");\n    setName(\" \");\n  };\n\n  useEffect(function () {\n    fetchComments(film);\n  }, []);\n\n  var fetchComments = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(film) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              db.collection(\"comments\").where(\"filmId\", \"==\", film.id).onSnapshot(function (querySnapshot) {\n                var filmcoms = [];\n                querySnapshot.forEach(function (doc) {\n                  filmcoms.push(doc.data());\n                });\n                console.log(\"List of comments \", filmcoms);\n                setCommentlist(filmcoms);\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchComments(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-comentars\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \" Comments\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, \" \", commentlist.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie-list\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"commits\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, item.name, \":\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \" \", item.comment)));\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"constainer_imputs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputC\",\n    type: \"text\",\n    required: true,\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    placeholder: \"Write your name here\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputC\",\n    type: \"text\",\n    required: true,\n    value: comm,\n    onChange: function onChange(e) {\n      return setComm(e.target.value);\n    },\n    placeholder: \"Write your comment here\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: saveComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \" Leave a comment\"))))));\n};\n\nexport default Comments;","map":{"version":3,"names":["React","useState","useEffect","saveComm","db","firebase","Comments","film","commentlist","setCommentlist","comm","setComm","name","setName","saveComment","data","comment","filmId","id","console","log","cleardata","error","fetchComments","collection","where","onSnapshot","querySnapshot","filmcoms","forEach","doc","push","map","item","index","e","target","value"],"sources":["C:/Users/raibr/Documents/Meus Projetos/Movie-Bazzar/src/routes/filmsInfo/Comments.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../filmsInfo/FilmsInfo.css\";\r\nimport { saveComm } from \"../../features/firebaseFunctions\";\r\nimport db from \"../../features/firebaseConfig\";\r\nimport firebase from 'firebase/app';\r\n\r\n\r\nconst Comments = ({ film }) => {\r\n  const [commentlist , setCommentlist] = useState([]);\r\n\r\n\r\n  const [comm , setComm] = useState(\"\");\r\n  const [name , setName] = useState(\"\");\r\n\r\n\r\n\r\n    const saveComment = () =>{\r\n      try{\r\n          const data = {\r\n            name : name ,\r\n            comment : comm ,\r\n            filmId : film.id\r\n          }\r\n        console.log(\"data\" , data)\r\n          saveComm(data)\r\n          cleardata()\r\n      } catch(error) {\r\n        console.log(error)\r\n      }\r\n\r\n\r\n    }\r\n\r\n\r\n  const cleardata = () => {\r\n    setComm(\" \");\r\n\r\n    setName(\" \");\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComments(film);\r\n\r\n  } , []);\r\n\r\n  const fetchComments = async (film) => {\r\n    db.collection(\"comments\").where(\"filmId\", \"==\", film.id)\r\n    .onSnapshot((querySnapshot) => {\r\n      var filmcoms = [];\r\n      querySnapshot.forEach((doc) => {\r\n        filmcoms.push(doc.data());\r\n      });\r\n\r\n      console.log(\"List of comments \", filmcoms);\r\n      setCommentlist(filmcoms);\r\n\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"movie-comentars\">\r\n        <div className=\"\">\r\n          <div className=\"\">\r\n\r\n            <h2> Comments</h2>\r\n            <div className=\"test\">\r\n              <div className=\"comments-container\">\r\n                <div className=\"\">\r\n                  <div> {commentlist.map((item, index) => {\r\n          return (\r\n            <div className=\"movie-list\" key={index}>\r\n              <div className=\"commits\">\r\n                <p>{item.name}:</p>\r\n                <p> {item.comment}</p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"constainer_imputs\">\r\n              <div className=\"inputs\">\r\n                <input\r\n                  className=\"inputC\"\r\n                  type=\"text\"\r\n                  required\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  placeholder=\"Write your name here\"\r\n                ></input>\r\n                <input\r\n                  className=\"inputC\"\r\n                  type=\"text\"\r\n                  required\r\n                  value={comm}\r\n                  onChange={(e) => setComm(e.target.value)}\r\n                  placeholder=\"Write your comment here\"\r\n                ></input>\r\n              </div>\r\n              <button onClick={saveComment}> Leave a comment</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,4BAAP;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,OAAOC,EAAP,MAAe,+BAAf;AACA,OAAOC,QAAP,MAAqB,cAArB;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAc;EAAA,IAAXC,IAAW,QAAXA,IAAW;;EAAA,gBACUN,QAAQ,CAAC,EAAD,CADlB;EAAA;EAAA,IACtBO,WADsB;EAAA,IACRC,cADQ;;EAAA,iBAIJR,QAAQ,CAAC,EAAD,CAJJ;EAAA;EAAA,IAItBS,IAJsB;EAAA,IAIfC,OAJe;;EAAA,iBAKJV,QAAQ,CAAC,EAAD,CALJ;EAAA;EAAA,IAKtBW,IALsB;EAAA,IAKfC,OALe;;EAS3B,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAK;IACvB,IAAG;MACC,IAAMC,IAAI,GAAG;QACXH,IAAI,EAAGA,IADI;QAEXI,OAAO,EAAGN,IAFC;QAGXO,MAAM,EAAGV,IAAI,CAACW;MAHH,CAAb;MAKFC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAqBL,IAArB;MACEZ,QAAQ,CAACY,IAAD,CAAR;MACAM,SAAS;IACZ,CATD,CASE,OAAMC,KAAN,EAAa;MACbH,OAAO,CAACC,GAAR,CAAYE,KAAZ;IACD;EAGF,CAfD;;EAkBF,IAAMD,SAAS,GAAG,SAAZA,SAAY,GAAM;IACtBV,OAAO,CAAC,GAAD,CAAP;IAEAE,OAAO,CAAC,GAAD,CAAP;EACD,CAJD;;EAMAX,SAAS,CAAC,YAAM;IACdqB,aAAa,CAAChB,IAAD,CAAb;EAED,CAHQ,EAGL,EAHK,CAAT;;EAKA,IAAMgB,aAAa;IAAA,qEAAG,iBAAOhB,IAAP;MAAA;QAAA;UAAA;YAAA;cACpBH,EAAE,CAACoB,UAAH,CAAc,UAAd,EAA0BC,KAA1B,CAAgC,QAAhC,EAA0C,IAA1C,EAAgDlB,IAAI,CAACW,EAArD,EACCQ,UADD,CACY,UAACC,aAAD,EAAmB;gBAC7B,IAAIC,QAAQ,GAAG,EAAf;gBACAD,aAAa,CAACE,OAAd,CAAsB,UAACC,GAAD,EAAS;kBAC7BF,QAAQ,CAACG,IAAT,CAAcD,GAAG,CAACf,IAAJ,EAAd;gBACD,CAFD;gBAIAI,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCQ,QAAjC;gBACAnB,cAAc,CAACmB,QAAD,CAAd;cAED,CAVD;;YADoB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAbL,aAAa;MAAA;IAAA;EAAA,GAAnB;;EAcA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,iBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,EAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,EAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAFF,eAGE;IAAK,SAAS,EAAC,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,oBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,EAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,QAAOf,WAAW,CAACwB,GAAZ,CAAgB,UAACC,IAAD,EAAOC,KAAP,EAAiB;IAChD,oBACE;MAAK,SAAS,EAAC,YAAf;MAA4B,GAAG,EAAEA,KAAjC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAK,SAAS,EAAC,SAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAID,IAAI,CAACrB,IAAT,MADF,eAEE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,QAAKqB,IAAI,CAACjB,OAAV,CAFF,CADF,CADF;EAQD,CATgB,CAAP,CADF,CADF,CADF,CAHF,eAoBE;IAAK,SAAS,EAAC,mBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,QAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IACE,SAAS,EAAC,QADZ;IAEE,IAAI,EAAC,MAFP;IAGE,QAAQ,MAHV;IAIE,KAAK,EAAEJ,IAJT;IAKE,QAAQ,EAAE,kBAACuB,CAAD;MAAA,OAAOtB,OAAO,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;IAAA,CALZ;IAME,WAAW,EAAC,sBANd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eASE;IACE,SAAS,EAAC,QADZ;IAEE,IAAI,EAAC,MAFP;IAGE,QAAQ,MAHV;IAIE,KAAK,EAAE3B,IAJT;IAKE,QAAQ,EAAE,kBAACyB,CAAD;MAAA,OAAOxB,OAAO,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;IAAA,CALZ;IAME,WAAW,EAAC,yBANd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EATF,CADF,eAmBE;IAAQ,OAAO,EAAEvB,WAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBAnBF,CApBF,CADF,CADF,CADF,CADF;AAkDD,CAtGD;;AAwGA,eAAeR,QAAf"},"metadata":{},"sourceType":"module"}