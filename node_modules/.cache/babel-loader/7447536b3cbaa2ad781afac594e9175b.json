{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\src\\\\routes\\\\filmsInfo\\\\Comments.jsx\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../filmsInfo/FilmsInfo.css\";\nimport saveComm from \"../../features/firebaseFunctions\";\nimport db from \"../../features/firebaseConfig\";\n\nvar Comments = function Comments(_ref) {\n  var film = _ref.film;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      comm = _useState2[0],\n      setComm = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var saveComment = function saveComment() {\n    try {\n      var data = {\n        name: name,\n        comment: comm,\n        filmId: film.id\n      };\n      console.log(\"data\", data);\n      saveComm(data);\n      cleardata();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  var cleardata = function cleardata() {\n    setComm(\" \");\n    setName(\" \");\n  };\n\n  var fetchCommentData = function fetchCommentData() {\n    fetchcomments(film.id).then(function (data) {\n      console.log(data);\n    });\n  };\n\n  useEffect(function () {\n    fetchCommentData();\n  });\n\n  var fetchcomments = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(film) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              db.collection(\"comments\").where(\"filmId\", \"==\", film).onSnapshot(function (querySnapshot) {\n                var filmcoms = [];\n                querySnapshot.forEach(function (doc) {\n                  filmcoms.push(doc.data());\n                });\n                console.log(\"List of  comments \", filmcoms);\n                return filmcoms;\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchcomments(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"comment\", {\n    className: \"movie-comentars\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \" Comments\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"labels1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, name, \" : \"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"labels2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \" \", comm, \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"constainer_imputs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputC\",\n    type: \"text\",\n    required: true,\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    placeholder: \"Write your name here\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputC\",\n    type: \"text\",\n    required: true,\n    value: comm,\n    onChange: function onChange(e) {\n      return setComm(e.target.value);\n    },\n    placeholder: \"Write your comment here\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: saveComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \" Leave a comment\")))));\n};\n\nexport default Comments;","map":{"version":3,"sources":["C:/Users/raibr/Documents/Meus Projetos/Movie-Bazzar/src/routes/filmsInfo/Comments.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","saveComm","db","Comments","film","comm","setComm","name","setName","dispatch","saveComment","data","comment","filmId","id","console","log","cleardata","error","fetchCommentData","fetchcomments","then","collection","where","onSnapshot","querySnapshot","filmcoms","forEach","doc","push","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../filmsInfo/FilmsInfo.css\";\r\nimport saveComm from \"../../features/firebaseFunctions\";\r\nimport db from \"../../features/firebaseConfig\";\r\n\r\nconst Comments = ({ film }) => {\r\n  const [comm, setComm] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const saveComment = () => {\r\n    try {\r\n      const data = {\r\n        name: name,\r\n        comment: comm,\r\n        filmId: film.id,\r\n      };\r\n      console.log(\"data\", data);\r\n      saveComm(data);\r\n      cleardata();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const cleardata = () => {\r\n    setComm(\" \");\r\n    setName(\" \");\r\n  };\r\n\r\n  const fetchCommentData = () => {\r\n    fetchcomments(film.id).then((data) => {\r\n      console.log(data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchCommentData();\r\n  });\r\n\r\n  const fetchcomments = async (film) => {\r\n    db.collection(\"comments\")\r\n      .where(\"filmId\", \"==\", film)\r\n      .onSnapshot((querySnapshot) => {\r\n        var filmcoms = [];\r\n        querySnapshot.forEach((doc) => {\r\n          filmcoms.push(doc.data());\r\n        });\r\n        console.log(\"List of  comments \", filmcoms);\r\n        return filmcoms;\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <comment className=\"movie-comentars\">\r\n        <div>\r\n          <h2> Comments</h2>\r\n          <div className=\"test\">\r\n            <div className=\"comments-container\">\r\n              <div className=\"\">\r\n                <label className=\"labels1\">{name} : </label>\r\n                <label className=\"labels2\"> {comm} </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"constainer_imputs\">\r\n            <div className=\"inputs\">\r\n              <input\r\n                className=\"inputC\"\r\n                type=\"text\"\r\n                required\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"Write your name here\"\r\n              ></input>\r\n              <input\r\n                className=\"inputC\"\r\n                type=\"text\"\r\n                required\r\n                value={comm}\r\n                onChange={(e) => setComm(e.target.value)}\r\n                placeholder=\"Write your comment here\"\r\n              ></input>\r\n            </div>\r\n            <button onClick={saveComment}> Leave a comment</button>\r\n          </div>\r\n        </div>\r\n      </comment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}