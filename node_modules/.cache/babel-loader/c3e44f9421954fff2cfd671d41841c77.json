{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\src\\\\components\\\\FilmList.jsx\";\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { actions, STATUS } from \"../features/filmList\";\nimport './FilmListStyles.css';\n\nvar FilmList = function FilmList() {\n  var listObject = useSelector(function (state) {\n    return state.filmList;\n  });\n  var status = listObject.status;\n  var list = listObject.list;\n  var apipath = 'https://image.tmdb.org/t/p/';\n  var dispatch = useDispatch();\n  var content = null;\n\n  if (status === STATUS.NORMAL) {\n    content = 'Redo for lite films!';\n  } else if (status === STATUS.FETCHING) {\n    content = 'V채ntar p책 films...';\n  } else if (status === STATUS.SUCCESS) {\n    content = list.map(function (films, index) {\n      return /*#__PURE__*/React.createElement(Link, {\n        key: films.original_title,\n        to: \"/filmsinfo/\".concat(films.id),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"movie-app\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"image-container d-flex justify-content-start m-3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"\".concat(apipath, \"/w200/\").concat(films.poster_path),\n        alt: films.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }))));\n    });\n  } else {\n    content = \"Kunde inte h채mta fakta\";\n  }\n\n  useEffect(function () {\n    fetchList(dispatch);\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-category\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return fetchList(dispatch, 28, 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Action\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return fetchList(dispatch, 35, 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Comdey\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return fetchList(dispatch, 18, 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }\n  }, \"Drama\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return fetchList(dispatch, 14, 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }\n  }, \"Fantasy\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return fetchList(dispatch, 27, 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }\n  }, \"Horror\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return fetchList(dispatch, 10749, 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }\n  }, \"Romance\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return fetchList(dispatch, 9648, 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }\n  }, \"Mystery\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return fetchList(dispatch, 53, 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }\n  }, \"Thriller\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return fetchList(dispatch, 12, 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }\n  }, \"Adventure\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid movie-app\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, content)));\n};\n\nfunction fetchList(_x, _x2) {\n  return _fetchList.apply(this, arguments);\n}\n\nfunction _fetchList() {\n  _fetchList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, gen) {\n    var url, response, json, list;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch(actions.isFetching()); //const url = 'https://imdb-api.com/en/API/Top250Movies/k_09fl5jeb'; API begr채nsat till 100 portar per dag.\n            // const url = 'https://api.themoviedb.org/3/movie/popular?api_key=298722d66314704d61c48e8fe9330363';\n\n            url = \"https://api.themoviedb.org/3/discover/movie?api_key=298722d66314704d61c48e8fe9330363&with_genres=\".concat(gen);\n            _context.prev = 2;\n            _context.next = 5;\n            return fetch(url);\n\n          case 5:\n            response = _context.sent;\n            _context.next = 8;\n            return response.json();\n\n          case 8:\n            json = _context.sent;\n            list = json.results;\n            dispatch(actions.success(list));\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](2);\n            dispatch(actions.failure());\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 13]]);\n  }));\n  return _fetchList.apply(this, arguments);\n}\n\nexport default FilmList;","map":{"version":3,"sources":["C:/Users/raibr/Documents/Meus Projetos/Movie-Bazzar/src/components/FilmList.jsx"],"names":["React","useEffect","useDispatch","useSelector","Link","actions","STATUS","FilmList","listObject","state","filmList","status","list","apipath","dispatch","content","NORMAL","FETCHING","SUCCESS","map","films","index","original_title","id","poster_path","title","fetchList","gen","isFetching","url","fetch","response","json","results","success","failure"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { actions, STATUS } from \"../features/filmList\";\r\nimport './FilmListStyles.css';\r\n\r\n\r\nconst FilmList = () => {\r\n  const listObject = useSelector(state => state.filmList);\r\n  const status = listObject.status;\r\n  const list = listObject.list;\r\n  const apipath = 'https://image.tmdb.org/t/p/';\r\n\r\n\r\n\r\n  const dispatch = useDispatch();\r\n   let content = null;\r\n\r\n   if (status === STATUS.NORMAL) {\r\n    content = 'Redo for lite films!';\r\n\r\n   }else if (status === STATUS.FETCHING){\r\n    content = 'V채ntar p책 films...';\r\n\r\n  }else if (status === STATUS.SUCCESS) {\r\n    content = list.map((films , index) => {\r\n      return(\r\n\r\n        <Link key={films.original_title} to={`/filmsinfo/${films.id}` }>\r\n          <div className=\"movie-app\">\r\n           <div className='image-container d-flex justify-content-start m-3'>\r\n              <img src={`${apipath}/w200/${films.poster_path}`}alt={films.title}/>\r\n           </div>\r\n          </div>\r\n        </Link>\r\n      )\r\n    });\r\n\r\n\r\n  }else {\r\n    content = \"Kunde inte h채mta fakta\";\r\n  }\r\n\r\n    useEffect(() => {\r\n      fetchList(dispatch);\r\n\r\n    }, [dispatch])\r\n\r\n  return(\r\n    <div className=\"\">\r\n\r\n         <div className=\"button-category\">\r\n            <button  onClick={() => fetchList(dispatch , 28, 1)} >Action</button>\r\n\r\n            <button  onClick={() => fetchList(dispatch , 35 , 1)}>Comdey</button>\r\n\r\n           <button onClick={() => fetchList(dispatch , 18 , 1)}>Drama</button>\r\n\r\n           <button onClick={() => fetchList(dispatch , 14 ,1 )}>Fantasy</button>\r\n\r\n           <button onClick={() => fetchList(dispatch , 27 , 1)}>Horror</button>\r\n\r\n           <button onClick={() => fetchList(dispatch , 10749 , 1)}>Romance</button>\r\n\r\n           <button onClick={() => fetchList(dispatch , 9648 , 1)}>Mystery</button>\r\n\r\n           <button onClick={() => fetchList(dispatch , 53 , 1)}>Thriller</button>\r\n\r\n           <button onClick={() => fetchList(dispatch , 12 , 1)}>Adventure</button>\r\n\r\n        </div>\r\n         <div className='container-fluid movie-app'>\r\n          <div className='row'>\r\n            {content}\r\n          </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n  )\r\n\r\n}\r\n\r\nasync function fetchList(dispatch , gen )  {\r\n\r\n  dispatch(actions.isFetching());\r\n\r\n\r\n\r\n //const url = 'https://imdb-api.com/en/API/Top250Movies/k_09fl5jeb'; API begr채nsat till 100 portar per dag.\r\n // const url = 'https://api.themoviedb.org/3/movie/popular?api_key=298722d66314704d61c48e8fe9330363';\r\n const url = `https://api.themoviedb.org/3/discover/movie?api_key=298722d66314704d61c48e8fe9330363&with_genres=${gen}`;\r\n\r\n try {\r\n   let response = await fetch(url)\r\n   let json = await response.json();\r\n   let list = json.results;\r\n   dispatch(actions.success(list))\r\n\r\n\r\n  }catch{\r\n    dispatch(actions.failure())\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default FilmList;\r\n\r\n"]},"metadata":{},"sourceType":"module"}