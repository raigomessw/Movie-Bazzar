{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport firebase from 'firebase/compat/app';\nimport db from \"./firebaseConfig\";\nimport { getAuth, signInAnonymously } from \"firebase/auth\";\n\nvar saveComm = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n    var auth;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //await setDoc(doc(firestore , \"comments\" ,`${Date.now()}`), data, {merge : true})\n            //const res = await  db.collection(\"comments\").doc(`${Date.now()}`).set(data);\n            auth = getAuth();\n            signInAnonymously(auth).then(function () {// Signed in..\n            }).catch(function (error) {\n              var errorCode = error.code;\n              var errorMessage = error.message; // ...\n            });\n            db.collection(\"comments\").doc(\"\".concat(Date.now())).set(data).then(function () {\n              console.log(\"Document successfully written!\");\n            }).catch(function (error) {\n              console.error(\"Error writing document: \", error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function saveComm(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default saveComm; // export const fetchcomments = async(film) => {\n//     db.collection(\"comments\").where(\"filmId\", \"==\", film)\n//     .onSnapshot((querySnapshot) => {\n//         var filmcoms = [];\n//         querySnapshot.forEach((doc) => {\n//             console.log(\"doc is \" , doc)\n//             filmcoms.push(doc.data());\n//         });\n//         console.log(\"List of  comments \", filmcoms );\n//         return filmcoms\n//     });\n//     }","map":{"version":3,"sources":["C:/Users/raibr/Documents/Meus Projetos/Movie-Bazzar/src/features/firebaseFunctions.js"],"names":["firebase","db","getAuth","signInAnonymously","saveComm","data","auth","then","catch","error","errorCode","code","errorMessage","message","collection","doc","Date","now","set","console","log"],"mappings":";;AACA,OAAQA,QAAR,MAAuB,qBAAvB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,OAAT,EAAkBC,iBAAlB,QAA2C,eAA3C;;AAEA,IAAMC,QAAQ;AAAA,sEAAG,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACjB;AAEA;AACMC,YAAAA,IAJW,GAIJJ,OAAO,EAJH;AAKjBC,YAAAA,iBAAiB,CAACG,IAAD,CAAjB,CACGC,IADH,CACQ,YAAM,CACV;AACD,aAHH,EAIGC,KAJH,CAIS,UAACC,KAAD,EAAW;AAChB,kBAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,kBAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B,CAFgB,CAGhB;AACD,aARH;AAUAZ,YAAAA,EAAE,CAACa,UAAH,CAAc,UAAd,EAA0BC,GAA1B,WAAiCC,IAAI,CAACC,GAAL,EAAjC,GAA+CC,GAA/C,CAAmDb,IAAnD,EACCE,IADD,CACM,YAAM;AACRY,cAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,aAHD,EAICZ,KAJD,CAIO,UAACC,KAAD,EAAW;AACdU,cAAAA,OAAO,CAACV,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACH,aAND;;AAfiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARL,QAAQ;AAAA;AAAA;AAAA,GAAd;;AAwBA,eAAeA,QAAf,C,CAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA","sourcesContent":["\r\nimport  firebase  from 'firebase/compat/app';\r\nimport db from \"./firebaseConfig\";\r\nimport { getAuth, signInAnonymously } from \"firebase/auth\";\r\n\r\nconst saveComm = async(data) => {\r\n//await setDoc(doc(firestore , \"comments\" ,`${Date.now()}`), data, {merge : true})\r\n\r\n//const res = await  db.collection(\"comments\").doc(`${Date.now()}`).set(data);\r\nconst auth = getAuth();\r\nsignInAnonymously(auth)\r\n  .then(() => {\r\n    // Signed in..\r\n  })\r\n  .catch((error) => {\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    // ...\r\n  });\r\n  \r\ndb.collection(\"comments\").doc(`${Date.now()}`).set(data)\r\n.then(() => {\r\n    console.log(\"Document successfully written!\");\r\n})\r\n.catch((error) => {\r\n    console.error(\"Error writing document: \", error);\r\n});\r\n\r\n}\r\nexport default saveComm;\r\n\r\n// export const fetchcomments = async(film) => {\r\n\r\n\r\n//     db.collection(\"comments\").where(\"filmId\", \"==\", film)\r\n//     .onSnapshot((querySnapshot) => {\r\n//         var filmcoms = [];\r\n//         querySnapshot.forEach((doc) => {\r\n//             console.log(\"doc is \" , doc)\r\n//             filmcoms.push(doc.data());\r\n//         });\r\n//         console.log(\"List of  comments \", filmcoms );\r\n//         return filmcoms\r\n//     });\r\n\r\n\r\n//     }"]},"metadata":{},"sourceType":"module"}