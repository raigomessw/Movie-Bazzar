{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\src\\\\routes\\\\filmsInfo\\\\Comments.jsx\";\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../filmsInfo/FilmsInfo.css\";\nimport { saveComm } from \"../../features/firebaseFunctions\";\nimport db from \"../../features/firebaseConfig\";\nimport { collection, query, where, onSnapshot } from 'firebaseConfig';\n\nvar Comments = function Comments(_ref) {\n  var film = _ref.film;\n  var content = [];\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      comm = _useState2[0],\n      setComm = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1]; //let commentlist = [];\n\n\n  var saveComment = function saveComment() {\n    try {\n      var data = {\n        name: name,\n        comment: comm,\n        filmId: film.id\n      };\n      console.log(\"data\", data);\n      saveComm(data);\n      cleardata();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  var cleardata = function cleardata() {\n    setComm(\" \");\n    setName(\" \");\n  };\n\n  useEffect(function () {\n    fetchComments(film);\n  });\n\n  var fetchComments = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(film) {\n      var q, unsubscribe;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              q = query(collection(db, \"comments\"), where(\"state\", \"==\", \"CA\"));\n              unsubscribe = onSnapshot(q, function (querySnapshot) {\n                var filmcoms = [];\n                querySnapshot.forEach(function (doc) {\n                  filmcoms.push(doc.data());\n                });\n                console.log(\"Current cities in CA: \", filmcoms.join(\", \"));\n              }); // db.collection( \"comments\").onSnapshot((querySnapshot) => {\n              //   var filmcoms = [];\n              //   querySnapshot.forEach((doc) => {\n              //     filmcoms.push(doc.data());\n              //   });\n\n              console.log(\"List of comments \", filmcoms);\n              content = filmcoms && filmcoms.map(function (item, index) {\n                return /*#__PURE__*/React.createElement(\"div\", {\n                  className: \"movie-list\",\n                  key: index,\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 13\n                  }\n                }, /*#__PURE__*/React.createElement(\"div\", {\n                  className: \"movie-title\",\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 15\n                  }\n                }, /*#__PURE__*/React.createElement(\"p\", {\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 17\n                  }\n                }, item.comment)));\n              });\n              return _context.abrupt(\"return\", content);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchComments(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"comment\", {\n    className: \"movie-comentars\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \" Comments\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"commits\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, content)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"constainer_imputs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputC\",\n    type: \"text\",\n    required: true,\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    placeholder: \"Write your name here\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputC\",\n    type: \"text\",\n    required: true,\n    value: comm,\n    onChange: function onChange(e) {\n      return setComm(e.target.value);\n    },\n    placeholder: \"Write your comment here\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: saveComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \" Leave a comment\"))))));\n};\n\nexport default Comments;","map":{"version":3,"sources":["C:/Users/raibr/Documents/Meus Projetos/Movie-Bazzar/src/routes/filmsInfo/Comments.jsx"],"names":["React","useState","useEffect","saveComm","db","collection","query","where","onSnapshot","Comments","film","content","comm","setComm","name","setName","saveComment","data","comment","filmId","id","console","log","cleardata","error","fetchComments","q","unsubscribe","querySnapshot","filmcoms","forEach","doc","push","join","map","item","index","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../filmsInfo/FilmsInfo.css\";\r\nimport { saveComm } from \"../../features/firebaseFunctions\";\r\nimport db from \"../../features/firebaseConfig\";\r\nimport { collection, query, where, onSnapshot } from 'firebaseConfig';\r\n\r\nconst Comments = ({ film }) => {\r\n  let content = [];\r\n\r\n  const [comm, setComm] = useState(\"\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n\r\n  //let commentlist = [];\r\n\r\n  const saveComment = () => {\r\n    try {\r\n      const data = {\r\n        name: name,\r\n\r\n        comment: comm,\r\n\r\n        filmId: film.id,\r\n      };\r\n\r\n      console.log(\"data\", data);\r\n\r\n      saveComm(data);\r\n\r\n      cleardata();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const cleardata = () => {\r\n    setComm(\" \");\r\n\r\n    setName(\" \");\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComments(film);\r\n  });\r\n\r\n  const fetchComments = async (film) => {\r\n    const q = query(collection(db, \"comments\"), where(\"state\", \"==\", \"CA\"));\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n    const filmcoms = [];\r\n    querySnapshot.forEach((doc) => {\r\n      filmcoms.push(doc.data());\r\n  });\r\n  console.log(\"Current cities in CA: \", filmcoms.join(\", \"));\r\n});\r\n    // db.collection( \"comments\").onSnapshot((querySnapshot) => {\r\n    //   var filmcoms = [];\r\n    //   querySnapshot.forEach((doc) => {\r\n    //     filmcoms.push(doc.data());\r\n    //   });\r\n\r\n      console.log(\"List of comments \", filmcoms);\r\n\r\n      content =\r\n        filmcoms &&\r\n        filmcoms.map((item, index) => {\r\n          return (\r\n            <div className=\"movie-list\" key={index}>\r\n              <div className=\"movie-title\">\r\n                <p>{item.comment}</p>\r\n              </div>\r\n            </div>\r\n          );\r\n        });\r\n\r\n      return content;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <comment className=\"movie-comentars\">\r\n        <div className=\"\">\r\n          <div className=\"\">\r\n            <h2> Comments</h2>\r\n            <div className=\"test\">\r\n              <div className=\"comments-container\">\r\n                <div className=\"commits\">\r\n                  <div className=\"test\">{content}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"constainer_imputs\">\r\n              <div className=\"inputs\">\r\n                <input\r\n                  className=\"inputC\"\r\n                  type=\"text\"\r\n                  required\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  placeholder=\"Write your name here\"\r\n                ></input>\r\n                <input\r\n                  className=\"inputC\"\r\n                  type=\"text\"\r\n                  required\r\n                  value={comm}\r\n                  onChange={(e) => setComm(e.target.value)}\r\n                  placeholder=\"Write your comment here\"\r\n                ></input>\r\n              </div>\r\n              <button onClick={saveComment}> Leave a comment</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </comment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}