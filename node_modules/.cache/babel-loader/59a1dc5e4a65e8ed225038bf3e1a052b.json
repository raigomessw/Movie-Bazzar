{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { initializeApp } from 'firebase';\nimport db from \"../features\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBWrQlyG4C9pm4li2WQQLPP9YclhWsiZnM\",\n  authDomain: \"movie-bazzar.firebaseapp.com\",\n  projectId: \"movie-bazzar\",\n  storageBucket: \"movie-bazzar.appspot.com\",\n  messagingSenderId: \"550816010525\",\n  appId: \"1:550816010525:web:cdb2c14e7671d4122cd1f4\"\n};\nvar app = initializeApp(firebaseConfig);\nexport var saveComm = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //await setDoc(doc(firestore , \"comments\" ,`${Date.now()}`), data, {merge : true})\n            //const res = await  db.collection(\"comments\").doc(`${Date.now()}`).set(data);\n            db.collection(\"comments\").doc(\"\".concat(Date.now())).set(data).then(function () {\n              console.log(\"Document successfully written!\");\n            }).catch(function (error) {\n              console.error(\"Error writing document: \", error);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function saveComm(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // export const fetchcomments = async(film) => {\n//     db.collection(\"comments\").where(\"filmId\", \"==\", film)\n//     .onSnapshot((querySnapshot) => {\n//         var filmcoms = [];\n//         querySnapshot.forEach((doc) => {\n//             console.log(\"doc is \" , doc)\n//             filmcoms.push(doc.data());\n//         });\n//         console.log(\"List of  comments \", filmcoms );\n//         return filmcoms\n//     });\n//     }","map":{"version":3,"sources":["C:/Users/raibr/Documents/Meus Projetos/Movie-Bazzar/src/features/firebaseFunctions.js"],"names":["initializeApp","db","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","saveComm","data","collection","doc","Date","now","set","then","console","log","catch","error"],"mappings":";;AACA,SAASA,aAAT,QAA8B,UAA9B;AACA,OAAOC,EAAP,MAAe,aAAf;AAEA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,8BAFS;AAGrBC,EAAAA,SAAS,EAAE,cAHU;AAIrBC,EAAAA,aAAa,EAAE,0BAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB;AAQA,IAAMC,GAAG,GAAGT,aAAa,CAACE,cAAD,CAAzB;AACA,OAAO,IAAMQ,QAAQ;AAAA,sEAAG,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AACxB;AAEA;AAEAV,YAAAA,EAAE,CAACW,UAAH,CAAc,UAAd,EAA0BC,GAA1B,WAAiCC,IAAI,CAACC,GAAL,EAAjC,GAA+CC,GAA/C,CAAmDL,IAAnD,EACCM,IADD,CACM,YAAM;AACRC,cAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,aAHD,EAICC,KAJD,CAIO,UAACC,KAAD,EAAW;AACdH,cAAAA,OAAO,CAACG,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACH,aAND;;AALwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARX,QAAQ;AAAA;AAAA;AAAA,GAAd,C,CAiBP;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA","sourcesContent":["\r\nimport { initializeApp } from 'firebase';\r\nimport db from \"../features\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBWrQlyG4C9pm4li2WQQLPP9YclhWsiZnM\",\r\n  authDomain: \"movie-bazzar.firebaseapp.com\",\r\n  projectId: \"movie-bazzar\",\r\n  storageBucket: \"movie-bazzar.appspot.com\",\r\n  messagingSenderId: \"550816010525\",\r\n  appId: \"1:550816010525:web:cdb2c14e7671d4122cd1f4\"\r\n};\r\nconst app = initializeApp(firebaseConfig);\r\nexport const saveComm = async(data) => {\r\n//await setDoc(doc(firestore , \"comments\" ,`${Date.now()}`), data, {merge : true})\r\n\r\n//const res = await  db.collection(\"comments\").doc(`${Date.now()}`).set(data);\r\n\r\ndb.collection(\"comments\").doc(`${Date.now()}`).set(data)\r\n.then(() => {\r\n    console.log(\"Document successfully written!\");\r\n})\r\n.catch((error) => {\r\n    console.error(\"Error writing document: \", error);\r\n});\r\n\r\n\r\n}\r\n\r\n\r\n// export const fetchcomments = async(film) => {\r\n\r\n\r\n//     db.collection(\"comments\").where(\"filmId\", \"==\", film)\r\n//     .onSnapshot((querySnapshot) => {\r\n//         var filmcoms = [];\r\n//         querySnapshot.forEach((doc) => {\r\n//             console.log(\"doc is \" , doc)\r\n//             filmcoms.push(doc.data());\r\n//         });\r\n//         console.log(\"List of  comments \", filmcoms );\r\n//         return filmcoms\r\n//     });\r\n\r\n\r\n//     }\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}