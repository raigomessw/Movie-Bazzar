{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\raibr\\\\Documents\\\\Meus Projetos\\\\Movie-Bazzar\\\\src\\\\routes\\\\filmsInfo\\\\Comments.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport \"../filmsInfo/FilmsInfo.css\";\nimport { saveComm } from \"../..\";\nimport db from \"../../features/firebaseConfig\";\n\nvar Comments = function Comments(_ref) {\n  var film = _ref.film;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      comm = _useState2[0],\n      setComm = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var saveComment = function saveComment() {\n    try {\n      var data = {\n        name: name,\n        comment: comm,\n        filmId: film.id\n      };\n      console.log(\"data\", data);\n      saveComm(data);\n      cleardata();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  var cleardata = function cleardata() {\n    setComm(\" \");\n    setName(\" \");\n  };\n\n  var fetchCommentData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetchcomments(film.id).then(function (data) {\n                console.log(data);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchCommentData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchCommentData();\n  });\n\n  var fetchcomments = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(film) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              db.collection(\"comments\").where(\"filmId\", \"==\", film).onSnapshot(function (querySnapshot) {\n                var filmcoms = [];\n                querySnapshot.forEach(function (doc) {\n                  filmcoms.push(doc.data());\n                });\n                console.log(\"List of  comments \", filmcoms);\n                return filmcoms;\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function fetchcomments(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"comment\", {\n    className: \"movie-comentars\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \" Comments\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \" here comes the list of comments \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputC\",\n    type: \"text\",\n    required: true,\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    placeholder: \"Write your comment here\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputC\",\n    type: \"text\",\n    required: true,\n    value: comm,\n    onChange: function onChange(e) {\n      return setComm(e.target.value);\n    },\n    placeholder: \"Write your comment here\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: saveComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \" Leave a comment\"))))));\n};\n\nexport default Comments;","map":{"version":3,"sources":["C:/Users/raibr/Documents/Meus Projetos/Movie-Bazzar/src/routes/filmsInfo/Comments.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","saveComm","db","Comments","film","comm","setComm","name","setName","dispatch","saveComment","data","comment","filmId","id","console","log","cleardata","error","fetchCommentData","fetchcomments","then","collection","where","onSnapshot","querySnapshot","filmcoms","forEach","doc","push","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState ,  useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport \"../filmsInfo/FilmsInfo.css\";\r\nimport { saveComm} from \"../..\";\r\nimport db from \"../../features/firebaseConfig\";\r\n\r\nconst Comments = ({ film }) => {\r\n\r\n\r\n  const [comm , setComm] = useState(\"\");\r\n  const [name , setName] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n    const saveComment = () =>{\r\n      try{\r\n          const data = {\r\n            name : name ,\r\n            comment : comm ,\r\n            filmId : film.id\r\n          }\r\n        console.log(\"data\" , data)\r\n          saveComm(data)\r\n          cleardata()\r\n      } catch(error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n   const cleardata = () => {\r\n    setComm(\" \");\r\n    setName(\" \");\r\n    }\r\n\r\n\r\n    const fetchCommentData = async() => {\r\n      await fetchcomments(film.id).then((data) => {\r\n\r\n        console.log(data)\r\n\r\n      });\r\n\r\n    }\r\nuseEffect(() => {\r\n  fetchCommentData()\r\n});\r\n\r\nconst fetchcomments = async(film) => {\r\n  db.collection(\"comments\").where(\"filmId\", \"==\", film)\r\n  .onSnapshot((querySnapshot) => {\r\n      var filmcoms = [];\r\n      querySnapshot.forEach((doc) => {\r\n          filmcoms.push(doc.data());\r\n      });\r\n      console.log(\"List of  comments \", filmcoms );\r\n      return filmcoms\r\n  })\r\n}\r\n\r\n  return (\r\n    <div>\r\n\r\n\r\n<comment className=\"movie-comentars\">\r\n          <div className=\"\">\r\n            <div className=\"\">\r\n              <h2> Comments</h2>\r\n\r\n              <div className=\"test\">\r\n\r\n                <p> here comes the list of comments </p>\r\n\r\n              </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n              <div className=\"inputs\">\r\n              <input className=\"inputC\"  type = \"text\" required value={name} onChange={(e) => setName(e.target.value)} placeholder= \"Write your comment here\"></input>\r\n                <input className=\"inputC\"  type = \"text\" required value={comm} onChange={(e) => setComm(e.target.value)} placeholder= \"Write your comment here\"></input>\r\n\r\n                <button onClick={saveComment}> Leave a comment</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </comment>\r\n\r\n\r\n        </div>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}